"use strict";var module=angular.module("product",[]),auth={},logout=function(){console.log("*** LOGOUT"),auth.loggedIn=!1,auth.authz=null,window.location=auth.logoutUrl};document.addEventListener("deviceready",function(a){var b=new Keycloak("keycloak.json");auth.loggedIn=!1,b.init({onLoad:"login-required"}).success(function(){auth.loggedIn=!0,auth.authz=b,auth.logoutUrl=b.authServerUrl+"/realms/devoxx/protocol/openid-connect/logout?redirect_uri=http://10.0.3.2:9000/index.html",module.factory("Auth",function(){return auth}),angular.bootstrap(document,["product"])}).error(function(){})}),module.controller("GlobalCtrl",["$scope","$http",function(a,b){a.products=[],a.reloadData=function(){b.get("http://10.0.3.2:3000/product").success(function(b){a.products=angular.fromJson(b)})},a.logout=logout}]),module.factory("authInterceptor",["$q","Auth",function(a,b){return{request:function(c){var d=a.defer();return b.authz.token&&b.authz.updateToken(5).success(function(){c.headers=c.headers||{},c.headers.Authorization="Bearer "+b.authz.token,d.resolve(c)}).error(function(){d.reject("Failed to refresh token")}),d.promise}}}]),module.config(["$httpProvider",function(a){a.defaults.useXDomain=!0,a.interceptors.push("authInterceptor")}]);